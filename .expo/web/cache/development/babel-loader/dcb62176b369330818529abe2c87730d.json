{"ast":null,"code":"var _jsxFileName = \"/home/jonathan/Documentos/TwitchClone/src/pages/Following/index.tsx\";\nimport React from 'react';\nimport { Wrapper, Container, Main } from \"./styles\";\nimport Header from \"../../components/Header\";\nimport Heading from \"../../components/Heading\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { FlatList } from 'react-native-gesture-handler';\n\nvar Following = function Following() {\n  var _React$useMemo = React.useMemo(function () {\n    var items = [{\n      key: 'PAGE_HEADING',\n      render: function render() {\n        return React.createElement(Heading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 23\n          }\n        }, \"Following\");\n      }\n    }, {\n      key: 'FOLLOWED_CATEGORIES',\n      render: function render() {\n        return React.createElement(Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 23\n          }\n        }, \"Following Categories\");\n      },\n      isTitle: true\n    }, {\n      key: 'C1',\n      render: function render() {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 34\n          }\n        });\n      }\n    }, {\n      key: 'LIVES_CHANNELS',\n      render: function render() {\n        return React.createElement(Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 23\n          }\n        }, \"Lives Channels\");\n      },\n      isTitle: true\n    }, {\n      key: 'C2',\n      render: function render() {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 34\n          }\n        });\n      }\n    }, {\n      key: 'CONTINUE_WATCHING',\n      render: function render() {\n        return React.createElement(Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 23\n          }\n        }, \"Continue Watching\");\n      },\n      isTitle: true\n    }, {\n      key: 'C3',\n      render: function render() {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 34\n          }\n        });\n      }\n    }, {\n      key: 'OFFLINE_CHANNELS',\n      render: function render() {\n        return React.createElement(Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 23\n          }\n        }, \"Offline Channels\");\n      },\n      isTitle: true\n    }, {\n      key: 'C4',\n      render: function render() {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 34\n          }\n        });\n      }\n    }];\n    var indices = [];\n    items.forEach(function (item, index) {\n      return item.isTitle && indices.push(index);\n    });\n    return {\n      data: items,\n      indices: indices\n    };\n  }, []),\n      data = _React$useMemo.data,\n      indices = _React$useMemo.indices;\n\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: data,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return item.render();\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.key;\n    },\n    stickyHeaderIndices: indices,\n    onRefresh: function onRefresh() {},\n    refreshing: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Following;","map":{"version":3,"sources":["/home/jonathan/Documentos/TwitchClone/src/pages/Following/index.tsx"],"names":["React","Wrapper","Container","Main","Header","Heading","FlatList","Following","useMemo","items","key","render","isTitle","indices","forEach","item","index","push","data"],"mappings":"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","sourcesContent":["import React, { JSXElementConstructor } from 'react';\nimport { Wrapper, Container, Main } from './styles';\nimport Header from '../../components/Header';\nimport Heading from '../../components/Heading';\n\nimport { View } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\n\ninterface Item {\n  key: string;\n  render: () => JSX.Element;\n  isTitle?: boolean;\n}\n\nconst Following: React.FC = () => {\n  const { data, indices} = React.useMemo(() =>{\n    const items: Item[] = [\n      {\n        key: 'PAGE_HEADING',\n        render: () => <Heading>Following</Heading>\n      },\n      {\n        key: 'FOLLOWED_CATEGORIES',\n        render: () => <Title>Following Categories</Title>,\n        isTitle: true,\n      },\n      { key: 'C1', render: () => <View/> },\n      {\n        key: 'LIVES_CHANNELS',\n        render: () => <Title>Lives Channels</Title>,\n        isTitle: true,\n      },\n      { key: 'C2', render: () => <View/> },\n      {\n        key: 'CONTINUE_WATCHING',\n        render: () => <Title>Continue Watching</Title>,\n        isTitle: true,\n      },\n      { key: 'C3', render: () => <View/> },\n      {\n        key: 'OFFLINE_CHANNELS',\n        render: () => <Title>Offline Channels</Title>,\n        isTitle: true,\n      },\n      { key: 'C4', render: () => <View/> },\n    ];\n  //Array que contḿ apenas os indices doe elementos que são Títulos!\n    const indices: number[] = [];\n\n    items.forEach((item, index) => item.isTitle && indices.push(index));\n\n    return {\n      data:items,\n      indices,\n    }\n\n  }, []);\n  return (\n    <Wrapper>\n      <Container>\n        <Header></Header>\n\n        <Main>\n          <FlatList<Item>\n            data={data}\n            renderItem={({ item }) => item.render()}\n            keyExtractor={item => item.key}\n            stickyHeaderIndices={indices}\n            //Refresh Effect\n            onRefresh={() => {}}\n            refreshing={false}\n          />\n        </Main>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default Following;\n"]},"metadata":{},"sourceType":"module"}